load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
load("@bazel_skylib//lib:paths.bzl", "paths")
# load("@rules_cc//cc:defs.bzl", "windows_resources")


#load("@aspect_bazel_lib//lib:expand_make_vars.bzl", "expand_template")

# Root arrow C++ package

# Following CMakeLists.txt
# targets: arrow-all, arrow, arrow-benchmarks, arrow-tests, arrow-integration
# arrow-all: arrow arrow-tests arrow-benchmarks arrow-integration
# tests
# fuzzers
# benchmarks
#
# build flags:
#   ARROW_HAVE_RUNTIME_AVX2
#   ARROW_HAVE_RUNTIME_BMI2 (??) (seems to require AVX2)
#   ARROW_HAVE_RUNTIME_AVX512

package(
    default_visibility = ["//visibility:public"],
)

# Not complete rough patch from CMakeLists.txt
ARROW_VERSION_MINOR = 16

ARROW_VERSION_MAJOR = 0

ARROW_VERSION_PATCH = 0

ARROW_VERSION = "%d.%d.%d-bazel" % (ARROW_VERSION_MAJOR, ARROW_VERSION_MINOR, ARROW_VERSION_PATCH)

ARROW_SO_VERSION = "%d" % (ARROW_VERSION_MAJOR * 100 + ARROW_VERSION_MINOR)

ARROW_FULL_SO_VERSION = "%s.%d.%d" % (ARROW_SO_VERSION, ARROW_VERSION_PATCH, 0)

ARROW_PACKAGE_KIND = "bazel"  # From git-grepping, some of the other choices are: conan, vcpkg, python-wheel-macos, python-wheel-windows

CMAKE_CXX_COMPILER_ID = "todo_cmake_cxx_compiler_id"

CMAKE_CXX_COMPILER_VERSION = "todo_cmake_cxx_compiler_version"

CMAKE_CXX_FLAGS = "todo_cmake_cxx_flags"

UPPERCASE_BUILD_TYPE = "DEBUG"  # "RELEASE" ?


# windows_resources(
#     name = "longpaths",
#     rc_files = ["util/io_util_test.rc"],
# )


expand_template(
    name = "util_config_h",
    out = "util/config.h",
    substitutions = {
        "@ARROW_VERSION_MAJOR@": "%d" % ARROW_VERSION_MAJOR,
        "@ARROW_VERSION_MINOR@": "%d" % ARROW_VERSION_MINOR,
        "@ARROW_VERSION_PATCH@": "%d" % ARROW_VERSION_PATCH,
        "@ARROW_VERSION@": ARROW_VERSION,
        "@ARROW_SO_VERSION@": ARROW_SO_VERSION,
        "@ARROW_FULL_SO_VERSION@": ARROW_FULL_SO_VERSION,
        "@ARROW_GIT_DESCRIPTION@": "todo-git-description",
        "@ARROW_GIT_ID@": "todo-git-id",
        "@ARROW_PACKAGE_KIND@": ARROW_PACKAGE_KIND,
        "@CMAKE_CXX_COMPILER_ID@": CMAKE_CXX_COMPILER_ID,
        "@CMAKE_CXX_COMPILER_VERSION@": CMAKE_CXX_COMPILER_VERSION,
        "@CMAKE_CXX_FLAGS@": CMAKE_CXX_FLAGS,
        "@UPPERCASE_BUILD_TYPE@": UPPERCASE_BUILD_TYPE,
        # Example how to find uses in the code
        # git grep -E ".*#.*/bARROW_CSV/b"
        "#cmakedefine ARROW_COMPUTE": "#define ARROW_COMPUTE",
        "#cmakedefine ARROW_CSV": "#define ARROW_CSV",
        "#cmakedefine ARROW_CUDA": "",  # "#define ARROW_CUDA",
        "#cmakedefine ARROW_DATASET": "",  # "define ARROW_DATASET",
        "#cmakedefine ARROW_FILESYSTEM": "#define ARROW_FILESYSTEM",
        "#cmakedefine ARROW_FLIGHT_SQL": "",  # "define ARROW_FLIGHT_SQL 0",
        "#cmakedefine ARROW_FLIGHT": "",  # "define ARROW_FLIGHT 0",
        "#cmakedefine ARROW_IPC": "#define ARROW_IPC",
        "#cmakedefine ARROW_JEMALLOC_VENDORED": "",  # "define ARROW_JEMALLOC_VENDORED",
        "#cmakedefine ARROW_JEMALLOC": "",  # "define ARROW_JEMALLOC",
        "#cmakedefine ARROW_JSON": "#define ARROW_JSON",
        "#cmakedefine ARROW_ORC": "",  # "define ARROW_ORC",
        "#cmakedefine ARROW_PARQUET": "",  # "define ARROW_PARQUET",
        "#cmakedefine ARROW_SUBSTRAIT": "",  # "define ARROW_SUBSTRAIT",
        "#cmakedefine ARROW_ENABLE_THREADING": "#define ARROW_ENABLE_THREADING",
        "#cmakedefine ARROW_GCS": "",  # "define ARROW_GCS",
        "#cmakedefine ARROW_S3": "",  # "define ARROW_S3",
        "#cmakedefine ARROW_USE_NATIVE_INT128": "#define ARROW_USE_NATIVE_INT128",
        "#cmakedefine ARROW_WITH_MUSL": "",  # "define ARROW_WITH_MUSL",
        "#cmakedefine ARROW_WITH_OPENTELEMETRY": "",  # "define ARROW_WITH_OPENTELEMETRY",
        "#cmakedefine ARROW_WITH_UCX": "",  # "define ARROW_WITH_UCX",
        "#cmakedefine PARQUET_REQUIRE_ENCRYPTION": "",  # "define PARQUET_REQUIRE_ENCRYPTION",
    },
    template = "util/config.h.cmake",
)

# From CMakeLists.txt
ARROW_SRCS = [
    "array/array_base.cc",
    "array/array_binary.cc",
    "array/array_decimal.cc",
    "array/array_dict.cc",
    "array/array_nested.cc",
    "array/array_primitive.cc",
    "array/array_run_end.cc",
    "array/builder_adaptive.cc",
    "array/builder_base.cc",
    "array/builder_binary.cc",
    "array/builder_decimal.cc",
    "array/builder_dict.cc",
    "array/builder_nested.cc",
    "array/builder_primitive.cc",
    "array/builder_run_end.cc",
    "array/builder_union.cc",
    "array/concatenate.cc",
    "array/data.cc",
    "array/diff.cc",
    "array/util.cc",
    "array/validate.cc",
    "buffer.cc",
    "builder.cc",
    "c/bridge.cc",
    "c/dlpack.cc",
    "chunk_resolver.cc",
    "chunked_array.cc",
    "compare.cc",
    "compute/api_aggregate.cc",
    "compute/api_scalar.cc",
    "compute/api_vector.cc",
    "compute/cast.cc",
    "compute/exec.cc",
    "compute/expression.cc",
    "compute/function_internal.cc",
    "compute/function.cc",
    "compute/kernel.cc",
    "compute/kernels/aggregate_basic.cc",
    "compute/kernels/aggregate_mode.cc",
    "compute/kernels/aggregate_quantile.cc",
    "compute/kernels/aggregate_tdigest.cc",
    "compute/kernels/aggregate_var_std.cc",
    "compute/kernels/codegen_internal.cc",
    "compute/kernels/hash_aggregate.cc",
    "compute/kernels/ree_util_internal.cc",
    "compute/kernels/row_encoder.cc",
    "compute/kernels/scalar_arithmetic.cc",
    "compute/kernels/scalar_boolean.cc",
    "compute/kernels/scalar_cast_boolean.cc",
    "compute/kernels/scalar_cast_dictionary.cc",
    "compute/kernels/scalar_cast_extension.cc",
    "compute/kernels/scalar_cast_internal.cc",
    "compute/kernels/scalar_cast_nested.cc",
    "compute/kernels/scalar_cast_numeric.cc",
    "compute/kernels/scalar_cast_string.cc",
    "compute/kernels/scalar_cast_temporal.cc",
    "compute/kernels/scalar_compare.cc",
    "compute/kernels/scalar_if_else.cc",
    "compute/kernels/scalar_nested.cc",
    "compute/kernels/scalar_random.cc",
    "compute/kernels/scalar_round.cc",
    "compute/kernels/scalar_set_lookup.cc",
    "compute/kernels/scalar_string_ascii.cc",
    "compute/kernels/scalar_string_utf8.cc",
    "compute/kernels/scalar_temporal_binary.cc",
    "compute/kernels/scalar_temporal_unary.cc",
    "compute/kernels/scalar_validity.cc",
    "compute/kernels/util_internal.cc",
    "compute/kernels/vector_array_sort.cc",
    "compute/kernels/vector_cumulative_ops.cc",
    "compute/kernels/vector_hash.cc",
    "compute/kernels/vector_nested.cc",
    "compute/kernels/vector_pairwise.cc",
    "compute/kernels/vector_rank.cc",
    "compute/kernels/vector_replace.cc",
    "compute/kernels/vector_run_end_encode.cc",
    "compute/kernels/vector_select_k.cc",
    "compute/kernels/vector_selection_filter_internal.cc",
    "compute/kernels/vector_selection_internal.cc",
    "compute/kernels/vector_selection_take_internal.cc",
    "compute/kernels/vector_selection.cc",
    "compute/kernels/vector_sort.cc",
    "compute/key_hash.cc",
    "compute/key_map.cc",
    "compute/light_array.cc",
    "compute/ordering.cc",
    "compute/registry.cc",
    "compute/row/compare_internal.cc",
    "compute/row/encode_internal.cc",
    "compute/row/grouper.cc",
    "compute/row/row_internal.cc",
    "compute/util.cc",
    "config.cc",
    "csv/chunker.cc",
    "csv/column_builder.cc",
    "csv/column_decoder.cc",
    "csv/converter.cc",
    "csv/options.cc",
    "csv/parser.cc",
    "csv/reader.cc",
    "csv/writer.cc",
    "datum.cc",
    "device.cc",
    "extension_type.cc",
    "extension/fixed_shape_tensor.cc",
    "filesystem/filesystem.cc",
    "filesystem/localfs.cc",
    "filesystem/mockfs.cc",
    "filesystem/path_util.cc",
    "filesystem/util_internal.cc",
    "io/buffered.cc",
    "io/caching.cc",
    "io/compressed.cc",
    "io/file.cc",
    "io/interfaces.cc",
    "io/memory.cc",
    "io/slow.cc",
    "io/stdio.cc",
    "io/transform.cc",
    "ipc/dictionary.cc",
    "ipc/feather.cc",
    "ipc/json_simple.cc",
    "ipc/message.cc",
    "ipc/metadata_internal.cc",
    "ipc/options.cc",
    "ipc/reader.cc",
    "ipc/writer.cc",
    "json/chunked_builder.cc",
    "json/chunker.cc",
    "json/converter.cc",
    "json/object_parser.cc",
    "json/object_writer.cc",
    "json/options.cc",
    "json/parser.cc",
    "json/reader.cc",
    "memory_pool.cc",
    "pretty_print.cc",
    "record_batch.cc",
    "result.cc",
    "scalar.cc",
    "sparse_tensor.cc",
    "status.cc",
    "table_builder.cc",
    "table.cc",
    "tensor.cc",
    "tensor/coo_converter.cc",
    "tensor/csf_converter.cc",
    "tensor/csx_converter.cc",
    "type_traits.cc",
    "type.cc",
    "util/align_util.cc",
    "util/async_util.cc",
    "util/atfork_internal.cc",
    "util/basic_decimal.cc",
    "util/bit_block_counter.cc",
    "util/bit_run_reader.cc",
    "util/bit_util.cc",
    "util/bitmap_builders.cc",
    "util/bitmap_ops.cc",
    "util/bitmap.cc",
    "util/bpacking.cc",
    "util/byte_size.cc",
    "util/cancel.cc",
    "util/compression.cc",
    "util/counting_semaphore.cc",
    "util/cpu_info.cc",
    "util/crc32.cc",
    "util/debug.cc",
    "util/decimal.cc",
    "util/delimiting.cc",
    "util/dict_util.cc",
    "util/float16.cc",
    "util/formatting.cc",
    "util/future.cc",
    "util/hashing.cc",
    "util/int_util.cc",
    "util/io_util.cc",
    "util/key_value_metadata.cc",
    "util/list_util.cc",
    "util/logging.cc",
    "util/memory.cc",
    "util/mutex.cc",
    "util/ree_util.cc",
    "util/string_builder.cc",
    "util/string.cc",
    "util/task_group.cc",
    "util/tdigest.cc",
    "util/thread_pool.cc",
    "util/time.cc",
    "util/tracing.cc",
    "util/trie.cc",
    "util/union_util.cc",
    "util/unreachable.cc",
    "util/uri.cc",
    "util/utf8.cc",
    "util/value_parsing.cc",
    "visitor.cc",
    #    "compute/kernels/aggregate_basic_avx2.cc",
    #    "compute/kernels/aggregate_basic_avx512.cc",
    #    "compute/key_hash_avx2.cc",
    #    "compute/key_map_avx2.cc",
    #    "compute/row/compare_internal_avx2.cc",
    #    "compute/row/encode_internal_avx2.cc",
    #    "compute/util_avx2.cc",
    #    "io/hdfs_internal.cc",
    #    "io/hdfs.cc",
    # filesystem\azurefs.cc
    # filesystem\gcsfs_internal.cc
    # filesystem\gcsfs.cc
    # filesystem\hdfs.cc
    # filesystem\s3fs.cc
]

ARROW_HDRS = [
    "api.h",
    "io/api.h",
    "stl.h",
    "util/rle_encoding.h",
    "util/bitmap_visit.h",
    "util/rows_to_batches.h",
    "util/bit_stream_utils.h",
    "util/byte_stream_split_internal.h",
    "util/cache_internal.h",
    "util/regex.h",
    "array.h",
    "array/array_base.h",
    "array/array_binary.h",
    "array/array_decimal.h",
    "array/array_dict.h",
    "array/array_nested.h",
    "array/array_primitive.h",
    "array/array_run_end.h",
    "array/builder_adaptive.h",
    "array/builder_base.h",
    "array/builder_binary.h",
    "array/builder_decimal.h",
    "array/builder_dict.h",
    "array/builder_nested.h",
    "array/builder_primitive.h",
    "array/builder_run_end.h",
    "array/builder_time.h",
    "array/builder_union.h",
    "array/concatenate.h",
    "array/data.h",
    "array/dict_internal.h",
    "array/diff.h",
    "array/util.h",
    "array/validate.h",
    "buffer_builder.h",
    "buffer.h",
    "builder.h",
    "c/abi.h",
    "c/bridge.h",
    "c/dlpack_abi.h",
    "c/dlpack.h",
    "c/helpers.h",
    "c/util_internal.h",
    "chunk_resolver.h",
    "chunked_array.h",
    "compare.h",
    "compute/api_aggregate.h",
    "compute/api_scalar.h",
    "compute/api_vector.h",
    "compute/api.h",
    "compute/cast_internal.h",
    "compute/cast.h",
    "compute/exec_internal.h",
    "compute/exec.h",
    "compute/expression_internal.h",
    "compute/expression.h",
    "compute/function_internal.h",
    "compute/function_options.h",
    "compute/function.h",
    "compute/kernel.h",
    "compute/kernels/aggregate_basic_internal.h",
    "compute/kernels/aggregate_internal.h",
    "compute/kernels/aggregate_var_std_internal.h",
    "compute/kernels/base_arithmetic_internal.h",
    "compute/kernels/chunked_internal.h",
    "compute/kernels/codegen_internal.h",
    "compute/kernels/common_internal.h",
    "compute/kernels/copy_data_internal.h",
    "compute/kernels/ree_util_internal.h",
    "compute/kernels/row_encoder_internal.h",
    "compute/kernels/scalar_cast_internal.h",
    "compute/kernels/scalar_string_internal.h",
    "compute/kernels/temporal_internal.h",
    "compute/kernels/util_internal.h",
    "compute/kernels/vector_selection_filter_internal.h",
    "compute/kernels/vector_selection_internal.h",
    "compute/kernels/vector_selection_take_internal.h",
    "compute/kernels/vector_sort_internal.h",
    "compute/key_hash.h",
    "compute/key_map.h",
    "compute/light_array.h",
    "compute/ordering.h",
    "compute/registry_internal.h",
    "compute/registry.h",
    "compute/row/compare_internal.h",
    "compute/row/encode_internal.h",
    "compute/row/grouper_internal.h",
    "compute/row/grouper.h",
    "compute/row/row_internal.h",
    "compute/type_fwd.h",
    "compute/util_internal.h",
    "compute/util.h",
    "config.h",
    "csv/api.h",
    "csv/chunker.h",
    "csv/column_builder.h",
    "csv/column_decoder.h",
    "csv/converter.h",
    "csv/inference_internal.h",
    "csv/invalid_row.h",
    "csv/lexing_internal.h",
    "csv/options.h",
    "csv/parser.h",
    "csv/reader.h",
    "csv/type_fwd.h",
    "csv/writer.h",
    "datum.h",
    "device.h",
    "extension_type.h",
    "extension/fixed_shape_tensor.h",
    "filesystem/api.h",
    "filesystem/filesystem.h",
    "filesystem/localfs.h",
    "filesystem/mockfs.h",
    "filesystem/path_util.h",
    "filesystem/type_fwd.h",
    "filesystem/util_internal.h",
    "io/buffered.h",
    "io/caching.h",
    "io/compressed.h",
    "io/concurrency.h",
    "io/file.h",
    "io/interfaces.h",
    "io/memory.h",
    "io/mman.h",
    "io/slow.h",
    "io/stdio.h",
    "io/transform.h",
    "io/type_fwd.h",
    "io/util_internal.h",
    "ipc/api.h",
    "ipc/dictionary.h",
    "ipc/feather.h",
    "ipc/json_simple.h",
    "ipc/message.h",
    "ipc/metadata_internal.h",
    "ipc/options.h",
    "ipc/reader_internal.h",
    "ipc/reader.h",
    "ipc/type_fwd.h",
    "ipc/util.h",
    "ipc/writer.h",
    "json/api.h",
    "json/chunked_builder.h",
    "json/chunker.h",
    "json/converter.h",
    "json/object_parser.h",
    "json/object_writer.h",
    "json/options.h",
    "json/parser.h",
    "json/rapidjson_defs.h",
    "json/reader.h",
    "json/type_fwd.h",
    "memory_pool_internal.h",
    "memory_pool.h",
    "pretty_print.h",
    "record_batch.h",
    "result_internal.h",
    "result.h",
    "scalar.h",
    "sparse_tensor.h",
    "status.h",
    "stl_allocator.h",
    "stl_iterator.h",
    "table_builder.h",
    "table.h",
    "tensor.h",
    "tensor/converter_internal.h",
    "tensor/converter.h",
    "type_fwd.h",
    "type_traits.h",
    "type.h",
    "util/algorithm.h",
    "util/align_util.h",
    "util/aligned_storage.h",
    "util/async_generator_fwd.h",
    "util/async_generator.h",
    "util/async_util.h",
    "util/atfork_internal.h",
    "util/basic_decimal.h",
    "util/binary_view_util.h",
    "util/bit_block_counter.h",
    "util/bit_run_reader.h",
    "util/bit_util.h",
    "util/bitmap_builders.h",
    "util/bitmap_generate.h",
    "util/bitmap_ops.h",
    "util/bitmap_reader.h",
    "util/bitmap_writer.h",
    "util/bitmap.h",
    "util/bitset_stack.h",
    "util/bpacking_default.h",
    "util/bpacking.h",
    "util/bpacking64_default.h",
    "util/byte_size.h",
    "util/cancel.h",
    "util/checked_cast.h",
    "util/compare.h",
    "util/compression_internal.h",
    "util/compression.h",
    "util/config.h",
    "util/counting_semaphore.h",
    "util/cpu_info.h",
    "util/crc32.h",
    "util/debug.h",
    "util/decimal_internal.h",
    "util/decimal.h",
    "util/delimiting.h",
    "util/dict_util.h",
    "util/dispatch.h",
    "util/double_conversion.h",
    "util/endian.h",
    "util/float16.h",
    "util/formatting.h",
    "util/functional.h",
    "util/future.h",
    "util/hash_util.h",
    "util/hashing.h",
    "util/int_util_overflow.h",
    "util/int_util.h",
    "util/int128_internal.h",
    "util/io_util.h",
    "util/iterator.h",
    "util/key_value_metadata.h",
    "util/launder.h",
    "util/list_util.h",
    "util/logging.h",
    "util/macros.h",
    "util/math_constants.h",
    "util/memory.h",
    "util/mutex.h",
    "util/parallel.h",
    "util/pcg_random.h",
    "util/print.h",
    "util/queue.h",
    "util/range.h",
    "util/ree_util.h",
    "util/reflection_internal.h",
    "util/simd.h",
    "util/slice_util_internal.h",
    "util/small_vector.h",
    "util/sort.h",
    "util/span.h",
    "util/string_builder.h",
    "util/string.h",
    "util/task_group.h",
    "util/tdigest.h",
    "util/thread_pool.h",
    "util/time.h",
    "util/tracing_internal.h",
    "util/tracing.h",
    "util/trie.h",
    "util/type_fwd.h",
    "util/type_traits.h",
    "util/ubsan.h",
    "util/union_util.h",
    "util/unreachable.h",
    "util/uri.h",
    "util/utf8_internal.h",
    "util/utf8.h",
    "util/value_parsing.h",
    "util/vector.h",
    "util/windows_compatibility.h",
    "util/windows_fixup.h",
    "visit_array_inline.h",
    "visit_data_inline.h",
    "visit_scalar_inline.h",
    "visit_type_inline.h",
    "visitor_generate.h",
    "visitor.h",
    #filesystem/hdfs.h
    #io/hdfs_internal.h
    #io/hdfs.h
    #filesystem\azurefs_internal.h
    #filesystem\azurefs.h
    #filesystem\gcsfs_internal.h
    #filesystem\gcsfs.h
    #filesystem\hdfs.h
    #filesystem\s3_internal.h
    #filesystem\s3fs.h
]

cc_library(
    name = "config",
    defines = ["ARROW_STATIC=1"],
    # deps = select({
    #     "@platforms//os:windows": ["longpaths"],
    #     "//conditions:default": [],
    # }),    
)

cc_library(
    name = "visibility",
    hdrs = ["util/visibility.h"],
    include_prefix = "arrow",
    deps = ["config"],
)

cc_library(
    name = "base64",
    hdrs = ["util/base64.h"],
    include_prefix = "arrow",
    deps = ["visibility"],
)

cc_library(
    name = "arrow",
    srcs = ARROW_SRCS,
    hdrs = ARROW_HDRS,
    include_prefix = "arrow",
    deps = [
        "visibility",
        "//cpp/src/arrow/vendored:base64",
        "//cpp/src/arrow/vendored:datetime",
        "//cpp/src/arrow/vendored:pcq",
        "//cpp/src/arrow/vendored:strptime",
        "//cpp/src/arrow/vendored:xxhash",
        "//cpp/src/arrow/vendored/double-conversion",
        "//cpp/src/arrow/vendored/fast_float",
        "//cpp/src/arrow/vendored/pcg",
        "//cpp/src/arrow/vendored/portable-snippets",
        "//cpp/src/arrow/vendored/uriparser",
        "//cpp/src/arrow/vendored/utfcpp",
        "//cpp/src/generated",
        "@rapidjson",
    ],
)

cc_library(
    name = "test_common",
    testonly = 1,
    srcs = [
        "compute/kernels/test_util.cc",
        "csv/test_common.cc",
        "io/test_common.cc",
        "ipc/test_common.cc",
        "util/test_common.cc",
    ],
    hdrs = [
        "compute/kernels/test_util.h",
        "memory_pool_test.h",
        "csv/test_common.h",
        "io/test_common.h",
        "ipc/test_common.h",
        "json/test_common.h",
        "util/test_common.h",
    ],
    include_prefix = "arrow",
    deps = [
        "//cpp/src/arrow/testing",
    ],
)

[cc_test(
    name = paths.dirname(n) + "_" + paths.replace_extension(paths.basename(n),""),
    srcs = [n],
    features = [
        "generate_pdb_file",
    ],
    deps = [
        "test_common",
        "@googletest//:gtest_main",
    ],
) for n in [
    "buffer_test.cc",
    "chunked_array_test.cc",
    "datum_test.cc",
    "extension_type_test.cc",
    "field_ref_test.cc",
    "memory_pool_test.cc",
    "pretty_print_test.cc",
    "public_api_test.cc",
    "record_batch_test.cc",
    "result_test.cc",
    "scalar_test.cc",
    "sparse_tensor_test.cc",
    "status_test.cc",
    "stl_iterator_test.cc",
    "stl_test.cc",
    "table_builder_test.cc",
    "table_test.cc",
    "tensor_test.cc",
    "type_test.cc",
    "array/array_binary_test.cc",
    "array/array_dict_test.cc",
    "array/array_list_test.cc",
    "array/array_list_view_test.cc",
    "array/array_run_end_test.cc",
    "array/array_struct_test.cc",
    "array/array_test.cc",
    "array/array_union_test.cc",
    "array/array_view_test.cc",
    "array/concatenate_test.cc",
    "array/diff_test.cc",
    "c/dlpack_test.cc",
    "c/bridge_test.cc",
    "util/align_util_test.cc",
    "util/async_generator_test.cc",
    "util/async_util_test.cc",
    "util/atfork_test.cc",
    "util/bit_block_counter_test.cc",
    "util/bit_util_test.cc",
    "util/byte_size_test.cc",
    "util/byte_stream_split_test.cc",
    "util/cache_test.cc",
    "util/cancel_test.cc",
    "util/checked_cast_test.cc",
    "util/compression_test.cc",
    "util/counting_semaphore_test.cc",
    #    "util/crc32_test.cc", # needs boost, duh!
    "util/decimal_test.cc",
    "util/float16_test.cc",
    "util/formatting_util_test.cc",
    "util/future_test.cc",
    "util/hashing_test.cc",
    "util/int_util_test.cc",
    "util/io_util_test.cc",
    #    "util/io_util_test.manifest",
    #    "util/io_util_test.rc",
    "util/iterator_test.cc",
    "util/key_value_metadata_test.cc",
    "util/list_util_test.cc",
    "util/logging_test.cc",
    "util/queue_test.cc",
    "util/range_test.cc",
    "util/ree_util_test.cc",
    "util/reflection_test.cc",
    "util/rle_encoding_test.cc",
    "util/rows_to_batches_test.cc",
    "util/small_vector_test.cc",
    "util/span_test.cc",
    "util/stl_util_test.cc",
    "util/string_test.cc",
    "util/task_group_test.cc",
    "util/tdigest_test.cc",
    "util/thread_pool_test.cc",
    "util/time_test.cc",
    "util/tracing_test.cc",
    "util/trie_test.cc",
    "util/uri_test.cc",
    "util/utf8_util_test.cc",
    "util/value_parsing_test.cc",
]]

cc_library(
    name = "benchmark_common",
    srcs = [
        "util/benchmark_main.cc",
    ],
    hdrs = [
        "util/benchmark_util.h",
    ],
    include_prefix = "arrow",
    deps = [
        "@google_benchmark//:benchmark",
    ],
)

[cc_test(
    name = paths.dirname(n) + "_" + paths.replace_extension(paths.basename(n),""),
    srcs = [n],
    features = [
        "generate_pdb_file",
    ],
    deps = [
        "benchmark_common",
        "test_common",
    ],
) for n in [
    "c/bridge_benchmark.cc",
    "compute/function_benchmark.cc",
    "compute/kernels/scalar_arithmetic_benchmark.cc",
    "compute/kernels/scalar_boolean_benchmark.cc",
    "compute/kernels/scalar_cast_benchmark.cc",
    "compute/kernels/scalar_compare_benchmark.cc",
    "compute/kernels/scalar_if_else_benchmark.cc",
    "compute/kernels/scalar_random_benchmark.cc",
    "compute/kernels/scalar_round_benchmark.cc",
    "compute/kernels/scalar_set_lookup_benchmark.cc",
    "compute/kernels/scalar_string_benchmark.cc",
    "compute/kernels/scalar_temporal_benchmark.cc",
    "compute/kernels/vector_hash_benchmark.cc",
    "compute/kernels/vector_partition_benchmark.cc",
    "compute/kernels/vector_replace_benchmark.cc",
    "compute/kernels/vector_selection_benchmark.cc",
    "compute/kernels/vector_sort_benchmark.cc",
    "compute/kernels/vector_topk_benchmark.cc",
    "tensor/tensor_conversion_benchmark.cc",
]]
