# This was tested only with MSVC on Windows
load("@bazel_skylib//rules:write_file.bzl", "write_file")

package(
    default_visibility = ["//visibility:public"],
)

SRCS = [
    "lib/cpp/src/thrift/TApplicationException.cpp",
    "lib/cpp/src/thrift/TOutput.cpp",
    "lib/cpp/src/thrift/VirtualProfiling.cpp",
    "lib/cpp/src/thrift/async/TAsyncChannel.cpp",
    "lib/cpp/src/thrift/async/TAsyncProtocolProcessor.cpp",
    "lib/cpp/src/thrift/async/TConcurrentClientSyncInfo.cpp",
    #"lib/cpp/src/thrift/async/TEvhttpClientChannel.cpp",
    #"lib/cpp/src/thrift/async/TEvhttpServer.cpp",
    "lib/cpp/src/thrift/concurrency/Monitor.cpp",
    "lib/cpp/src/thrift/concurrency/Mutex.cpp",
    "lib/cpp/src/thrift/concurrency/Thread.cpp",
    "lib/cpp/src/thrift/concurrency/ThreadFactory.cpp",
    "lib/cpp/src/thrift/concurrency/ThreadManager.cpp",
    "lib/cpp/src/thrift/concurrency/TimerManager.cpp",
    "lib/cpp/src/thrift/processor/PeekProcessor.cpp",
    "lib/cpp/src/thrift/protocol/TBase64Utils.cpp",
    "lib/cpp/src/thrift/protocol/TDebugProtocol.cpp",
    "lib/cpp/src/thrift/protocol/THeaderProtocol.cpp",
    "lib/cpp/src/thrift/protocol/TJSONProtocol.cpp",
    "lib/cpp/src/thrift/protocol/TMultiplexedProtocol.cpp",
    "lib/cpp/src/thrift/protocol/TProtocol.cpp",
    #"lib/cpp/src/thrift/qt/TQIODeviceTransport.cpp",
    #"lib/cpp/src/thrift/qt/TQTcpServer.cpp",
    "lib/cpp/src/thrift/server/TConnectedClient.cpp",
    #"lib/cpp/src/thrift/server/TNonblockingServer.cpp",
    "lib/cpp/src/thrift/server/TServer.cpp",
    "lib/cpp/src/thrift/server/TServerFramework.cpp",
    "lib/cpp/src/thrift/server/TSimpleServer.cpp",
    "lib/cpp/src/thrift/server/TThreadedServer.cpp",
    "lib/cpp/src/thrift/server/TThreadPoolServer.cpp",
    "lib/cpp/src/thrift/transport/SocketCommon.cpp",
    "lib/cpp/src/thrift/transport/TBufferTransports.cpp",
    "lib/cpp/src/thrift/transport/TFDTransport.cpp",
    "lib/cpp/src/thrift/transport/TFileTransport.cpp",
    "lib/cpp/src/thrift/transport/THeaderTransport.cpp",
    "lib/cpp/src/thrift/transport/THttpClient.cpp",
    "lib/cpp/src/thrift/transport/THttpServer.cpp",
    "lib/cpp/src/thrift/transport/THttpTransport.cpp",
    #"lib/cpp/src/thrift/transport/TNonblockingServerSocket.cpp",
    #"lib/cpp/src/thrift/transport/TNonblockingSSLServerSocket.cpp",
    "lib/cpp/src/thrift/transport/TPipe.cpp",
    "lib/cpp/src/thrift/transport/TPipeServer.cpp",
    "lib/cpp/src/thrift/transport/TServerSocket.cpp",
    "lib/cpp/src/thrift/transport/TSimpleFileTransport.cpp",
    "lib/cpp/src/thrift/transport/TSocket.cpp",
    #"lib/cpp/src/thrift/transport/TSocketPool.cpp",
    #"lib/cpp/src/thrift/transport/TSSLServerSocket.cpp",
    #"lib/cpp/src/thrift/transport/TSSLSocket.cpp",
    "lib/cpp/src/thrift/transport/TTransportException.cpp",
    "lib/cpp/src/thrift/transport/TTransportUtils.cpp",
    #"lib/cpp/src/thrift/transport/TWebSocketServer.cpp",
    "lib/cpp/src/thrift/transport/TZlibTransport.cpp",
]

WIN_SRCS = [
    "lib/cpp/src/thrift/windows/GetTimeOfDay.cpp",
    "lib/cpp/src/thrift/windows/OverlappedSubmissionThread.cpp",
    "lib/cpp/src/thrift/windows/SocketPair.cpp",
    "lib/cpp/src/thrift/windows/TWinsockSingleton.cpp",
    "lib/cpp/src/thrift/windows/WinFcntl.cpp",
]

HDRS = [
    "lib/cpp/src/thrift/numeric_cast.h",
    "lib/cpp/src/thrift/config.h",
    "lib/cpp/src/thrift/TApplicationException.h",
    "lib/cpp/src/thrift/TBase.h",
    "lib/cpp/src/thrift/TConfiguration.h",
    "lib/cpp/src/thrift/TDispatchProcessor.h",
    "lib/cpp/src/thrift/thrift-config.h",
    "lib/cpp/src/thrift/Thrift.h",
    "lib/cpp/src/thrift/thrift_export.h",
    "lib/cpp/src/thrift/TLogging.h",
    "lib/cpp/src/thrift/TNonCopyable.h",
    "lib/cpp/src/thrift/TOutput.h",
    "lib/cpp/src/thrift/TProcessor.h",
    "lib/cpp/src/thrift/TToString.h",
    "lib/cpp/src/thrift/async/TAsyncBufferProcessor.h",
    "lib/cpp/src/thrift/async/TAsyncChannel.h",
    "lib/cpp/src/thrift/async/TAsyncDispatchProcessor.h",
    "lib/cpp/src/thrift/async/TAsyncProcessor.h",
    "lib/cpp/src/thrift/async/TAsyncProtocolProcessor.h",
    "lib/cpp/src/thrift/async/TConcurrentClientSyncInfo.h",
    #"lib/cpp/src/thrift/async/TEvhttpClientChannel.h",
    #"lib/cpp/src/thrift/async/TEvhttpServer.h",
    "lib/cpp/src/thrift/concurrency/Exception.h",
    "lib/cpp/src/thrift/concurrency/FunctionRunner.h",
    "lib/cpp/src/thrift/concurrency/Monitor.h",
    "lib/cpp/src/thrift/concurrency/Mutex.h",
    "lib/cpp/src/thrift/concurrency/Thread.h",
    "lib/cpp/src/thrift/concurrency/ThreadFactory.h",
    "lib/cpp/src/thrift/concurrency/ThreadManager.h",
    "lib/cpp/src/thrift/concurrency/TimerManager.h",
    "lib/cpp/src/thrift/processor/PeekProcessor.h",
    "lib/cpp/src/thrift/processor/StatsProcessor.h",
    "lib/cpp/src/thrift/processor/TMultiplexedProcessor.h",
    "lib/cpp/src/thrift/protocol/TBase64Utils.h",
    "lib/cpp/src/thrift/protocol/TBinaryProtocol.h",
    "lib/cpp/src/thrift/protocol/TBinaryProtocol.tcc",
    "lib/cpp/src/thrift/protocol/TCompactProtocol.h",
    "lib/cpp/src/thrift/protocol/TCompactProtocol.tcc",
    "lib/cpp/src/thrift/protocol/TDebugProtocol.h",
    "lib/cpp/src/thrift/protocol/TEnum.h",
    "lib/cpp/src/thrift/protocol/THeaderProtocol.h",
    "lib/cpp/src/thrift/protocol/TJSONProtocol.h",
    "lib/cpp/src/thrift/protocol/TList.h",
    "lib/cpp/src/thrift/protocol/TMap.h",
    "lib/cpp/src/thrift/protocol/TMultiplexedProtocol.h",
    "lib/cpp/src/thrift/protocol/TProtocol.h",
    "lib/cpp/src/thrift/protocol/TProtocolDecorator.h",
    "lib/cpp/src/thrift/protocol/TProtocolException.h",
    "lib/cpp/src/thrift/protocol/TProtocolTap.h",
    "lib/cpp/src/thrift/protocol/TProtocolTypes.h",
    "lib/cpp/src/thrift/protocol/TSet.h",
    "lib/cpp/src/thrift/protocol/TVirtualProtocol.h",
    #"lib/cpp/src/thrift/qt/TQIODeviceTransport.h",
    #"lib/cpp/src/thrift/qt/TQTcpServer.h",
    "lib/cpp/src/thrift/server/TConnectedClient.h",
    #"lib/cpp/src/thrift/server/TNonblockingServer.h",
    "lib/cpp/src/thrift/server/TServer.h",
    "lib/cpp/src/thrift/server/TServerFramework.h",
    "lib/cpp/src/thrift/server/TSimpleServer.h",
    "lib/cpp/src/thrift/server/TThreadedServer.h",
    "lib/cpp/src/thrift/server/TThreadPoolServer.h",
    "lib/cpp/src/thrift/transport/PlatformSocket.h",
    "lib/cpp/src/thrift/transport/SocketCommon.h",
    "lib/cpp/src/thrift/transport/TBufferTransports.h",
    "lib/cpp/src/thrift/transport/TFDTransport.h",
    "lib/cpp/src/thrift/transport/TFileTransport.h",
    "lib/cpp/src/thrift/transport/THeaderTransport.h",
    "lib/cpp/src/thrift/transport/THttpClient.h",
    "lib/cpp/src/thrift/transport/THttpServer.h",
    "lib/cpp/src/thrift/transport/THttpTransport.h",
    #"lib/cpp/src/thrift/transport/TNonblockingServerSocket.h",
    #"lib/cpp/src/thrift/transport/TNonblockingServerTransport.h",
    #"lib/cpp/src/thrift/transport/TNonblockingSSLServerSocket.h",
    "lib/cpp/src/thrift/transport/TPipe.h",
    "lib/cpp/src/thrift/transport/TPipeServer.h",
    "lib/cpp/src/thrift/transport/TServerSocket.h",
    "lib/cpp/src/thrift/transport/TServerTransport.h",
    "lib/cpp/src/thrift/transport/TShortReadTransport.h",
    "lib/cpp/src/thrift/transport/TSimpleFileTransport.h",
    "lib/cpp/src/thrift/transport/TSocket.h",
    "lib/cpp/src/thrift/transport/TSocketPool.h",
    "lib/cpp/src/thrift/transport/TSocketUtils.h",
    "lib/cpp/src/thrift/transport/TSSLServerSocket.h",
    "lib/cpp/src/thrift/transport/TSSLSocket.h",
    "lib/cpp/src/thrift/transport/TTransport.h",
    "lib/cpp/src/thrift/transport/TTransportException.h",
    "lib/cpp/src/thrift/transport/TTransportUtils.h",
    "lib/cpp/src/thrift/transport/TVirtualTransport.h",
    "lib/cpp/src/thrift/transport/TWebSocketServer.h",
    "lib/cpp/src/thrift/transport/TZlibTransport.h",
]

WIN_HDRS = [
    "lib/cpp/src/thrift/windows/config.h",
    "lib/cpp/src/thrift/windows/GetTimeOfDay.h",
    "lib/cpp/src/thrift/windows/Operators.h",
    "lib/cpp/src/thrift/windows/OverlappedSubmissionThread.h",
    "lib/cpp/src/thrift/windows/SocketPair.h",
    "lib/cpp/src/thrift/windows/Sync.h",
    "lib/cpp/src/thrift/windows/TWinsockSingleton.h",
    "lib/cpp/src/thrift/windows/WinFcntl.h",
]

write_file(
    name = "write_config_h",
    out = "lib/cpp/src/thrift/config.h",
    content = 
        [
            "#pragma once",
            "#define PACKAGE_VERSION \"0.21.0\"",
            "#define PACKAGE_STRING \" 0.21.0\"",
            "#define ARITHMETIC_RIGHT_SHIFT 1",
            "#define SIGNED_RIGHT_SHIFT_IS 1",
            "#define HAVE_FCNTL_H 1",
            "#define HAVE_STDINT_H 1",
            "#define HAVE_INTTYPES_H 1",
        ] 
    + select({
        "@platforms//os:windows":
            [
                "#define HAVE_AF_UNIX_H 1",
            ],
        "//conditions:default":
        [
            "#define HAVE_ARPA_INET_H 1",
            "#define HAVE_NETDB_H 1",
            "#define HAVE_NETINET_IN_H 1",
            "#define HAVE_SIGNAL_H 1",
            "#define HAVE_UNISTD_H 1",
            "#define HAVE_SYS_IOCTL_H 1",
            "#define HAVE_SYS_PARAM_H 1",
            "#define HAVE_SYS_RESOURCE_H 1",
            "#define HAVE_SYS_SOCKET_H 1",
            "#define HAVE_SYS_STAT_H 1",
            "#define HAVE_SYS_UN_H 1",
            "#define HAVE_POLL_H 1",
            "#define HAVE_SYS_POLL_H 1",
            "#define HAVE_SYS_SELECT_H 1",
            "#define HAVE_SYS_TIME_H 1",
            "#define HAVE_SCHED_H 1",
            "#define HAVE_SCHED_GET_PRIORITY_MAX 1",
            "#define HAVE_SCHED_GET_PRIORITY_MIN 1",
            "#define HAVE_STRINGS_H 1",
            "#define HAVE_STRERROR_R 1",
            "#define STRERROR_R_CHAR_P 1",
            "#define HAVE_GETHOSTBYNAME_R 1",
        ]
    })
)

cc_library(
    name = "thrift",
    srcs = SRCS + select({
        "@platforms//os:windows": WIN_SRCS,
        "//conditions:default": []
    }),
    hdrs = HDRS + select({
        "@platforms//os:windows": WIN_HDRS,
        "//conditions:default": []
    }),
    copts = select({
        "@platforms//os:windows": ["-FItypeinfo"],
        "//conditions:default": [],
    }),
    strip_include_prefix = "lib/cpp/src",
    deps = [
        "@boost//:locale",
        "@boost//:scope_exit",
        "@boost//:tokenizer",
        "@zlib",
    ],
)
